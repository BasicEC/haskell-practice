-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/githubuser/labs#readme</a>
@package labs
@version 0.1.0.0

module App
data FromLibrary
FromLibrary :: Maybe String -> String -> FromLibrary
[libName] :: FromLibrary -> Maybe String
[impFileName] :: FromLibrary -> String
copyLibraryFile :: FilePath -> FilePath -> IO ()

module Lab1
sumOfElems :: Integral t => t -> t
sumOfElems2 :: Integral t => t -> t
sumOfElems3 :: Integer -> Integer
sumOfElems4 :: Integer -> Integer

module Lab2.List
data List a
Nil :: List a
Item :: a -> List a -> List a
add :: a -> List a -> List a
delete :: Eq a => a -> List a -> List a
head :: List a -> a
tail :: List a -> List a
fromList :: [a] -> List a
instance GHC.Base.Monoid (Lab2.List.List a)
instance GHC.Base.Semigroup (Lab2.List.List a)
instance GHC.Base.Functor Lab2.List.List
instance Data.Foldable.Foldable Lab2.List.List
instance GHC.Classes.Eq a => GHC.Classes.Eq (Lab2.List.List a)
instance GHC.Show.Show a => GHC.Show.Show (Lab2.List.List a)

module Lab2.TreeMap
height :: TreeMap k v -> Int
key :: TreeMap k v -> k
value :: TreeMap k v -> v
left :: TreeMap k v -> TreeMap k v
right :: TreeMap k v -> TreeMap k v
singleton :: k -> v -> TreeMap k v
node :: k -> v -> TreeMap k v -> TreeMap k v -> TreeMap k v
insert :: Ord k => k -> v -> TreeMap k v -> TreeMap k v
delete :: Ord k => k -> TreeMap k v -> TreeMap k v
member :: Ord k => k -> TreeMap k a -> Bool
notMember :: Ord k => k -> TreeMap k a -> Bool
get :: Ord k => k -> TreeMap k a -> Maybe a
fromList :: Ord k => [(k, v)] -> TreeMap k v
toList :: TreeMap k v -> [(k, v)]
data TreeMap k v
Nil :: TreeMap k v
Node :: Int -> k -> v -> TreeMap k v -> TreeMap k v -> TreeMap k v
instance GHC.Classes.Ord k => GHC.Base.Semigroup (Lab2.TreeMap.TreeMap k v)
instance Data.Foldable.Foldable (Lab2.TreeMap.TreeMap k)
instance GHC.Base.Functor (Lab2.TreeMap.TreeMap k)
instance (GHC.Classes.Eq k, GHC.Classes.Eq v) => GHC.Classes.Eq (Lab2.TreeMap.TreeMap k v)
instance (GHC.Show.Show k, GHC.Show.Show v) => GHC.Show.Show (Lab2.TreeMap.TreeMap k v)
